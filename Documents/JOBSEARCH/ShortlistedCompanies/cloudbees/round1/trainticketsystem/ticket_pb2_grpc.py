# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import ticket_pb2 as ticket__pb2


class TrainServiceStub(object):
    """The train ticketing service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PurchaseTicket = channel.unary_unary(
                '/ticket.TrainService/PurchaseTicket',
                request_serializer=ticket__pb2.TicketRequest.SerializeToString,
                response_deserializer=ticket__pb2.TicketReceipt.FromString,
                )
        self.GetReceiptDetails = channel.unary_unary(
                '/ticket.TrainService/GetReceiptDetails',
                request_serializer=ticket__pb2.ReceiptDetailsRequest.SerializeToString,
                response_deserializer=ticket__pb2.TicketReceipt.FromString,
                )
        self.ViewUsersBySection = channel.unary_unary(
                '/ticket.TrainService/ViewUsersBySection',
                request_serializer=ticket__pb2.SectionRequest.SerializeToString,
                response_deserializer=ticket__pb2.UsersBySectionResponse.FromString,
                )
        self.RemoveUser = channel.unary_unary(
                '/ticket.TrainService/RemoveUser',
                request_serializer=ticket__pb2.RemoveUserRequest.SerializeToString,
                response_deserializer=ticket__pb2.RemoveUserResponse.FromString,
                )
        self.ModifyUserSeat = channel.unary_unary(
                '/ticket.TrainService/ModifyUserSeat',
                request_serializer=ticket__pb2.ModifySeatRequest.SerializeToString,
                response_deserializer=ticket__pb2.ModifySeatResponse.FromString,
                )


class TrainServiceServicer(object):
    """The train ticketing service definition.
    """

    def PurchaseTicket(self, request, context):
        """API1
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReceiptDetails(self, request, context):
        """API2
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ViewUsersBySection(self, request, context):
        """API3
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveUser(self, request, context):
        """API4
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ModifyUserSeat(self, request, context):
        """API5
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TrainServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PurchaseTicket': grpc.unary_unary_rpc_method_handler(
                    servicer.PurchaseTicket,
                    request_deserializer=ticket__pb2.TicketRequest.FromString,
                    response_serializer=ticket__pb2.TicketReceipt.SerializeToString,
            ),
            'GetReceiptDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReceiptDetails,
                    request_deserializer=ticket__pb2.ReceiptDetailsRequest.FromString,
                    response_serializer=ticket__pb2.TicketReceipt.SerializeToString,
            ),
            'ViewUsersBySection': grpc.unary_unary_rpc_method_handler(
                    servicer.ViewUsersBySection,
                    request_deserializer=ticket__pb2.SectionRequest.FromString,
                    response_serializer=ticket__pb2.UsersBySectionResponse.SerializeToString,
            ),
            'RemoveUser': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveUser,
                    request_deserializer=ticket__pb2.RemoveUserRequest.FromString,
                    response_serializer=ticket__pb2.RemoveUserResponse.SerializeToString,
            ),
            'ModifyUserSeat': grpc.unary_unary_rpc_method_handler(
                    servicer.ModifyUserSeat,
                    request_deserializer=ticket__pb2.ModifySeatRequest.FromString,
                    response_serializer=ticket__pb2.ModifySeatResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ticket.TrainService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TrainService(object):
    """The train ticketing service definition.
    """

    @staticmethod
    def PurchaseTicket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ticket.TrainService/PurchaseTicket',
            ticket__pb2.TicketRequest.SerializeToString,
            ticket__pb2.TicketReceipt.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReceiptDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ticket.TrainService/GetReceiptDetails',
            ticket__pb2.ReceiptDetailsRequest.SerializeToString,
            ticket__pb2.TicketReceipt.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ViewUsersBySection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ticket.TrainService/ViewUsersBySection',
            ticket__pb2.SectionRequest.SerializeToString,
            ticket__pb2.UsersBySectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ticket.TrainService/RemoveUser',
            ticket__pb2.RemoveUserRequest.SerializeToString,
            ticket__pb2.RemoveUserResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ModifyUserSeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ticket.TrainService/ModifyUserSeat',
            ticket__pb2.ModifySeatRequest.SerializeToString,
            ticket__pb2.ModifySeatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
